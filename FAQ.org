#+AUTHOR: Alex Lu
#+EMAIL: alexluigit@gmail.com
#+startup: content

* FAQ
** How to prevent Dirvish from killing current buffer on session quit?

Set ~dirvish-reuse-session~ to t.

** Incorrect sort information on the mode-line

See [[https://github.com/alexluigit/dirvish/blob/main/CUSTOMIZING.org#in-relation-to-dired][Parsing switches]] and [[https://github.com/alexluigit/dirvish/blob/main/CUSTOMIZING.org#dired--dirvish][the sample config]].

** Duplicate icon columns / icons breaks line highlight

See [[#all-the-icons-dired.el][all-the-icons-dired]] and [[#treemacs-icons-dired.el][treemacs-icons-dired]].

* Related projects

Generally speaking, Dirvish should be able to handle most of the file
exploring/managing tasks, after all it is backed by the superb Dired.  Besides,
choose Dirvish over packages listed below gives you:
1. An unified user interface in all your file managing scenarios.
2. File preview at your disposal.
3. Less package configs to maintain or worry about.

** neotree

=neotree= works pretty well as a simple project explorer. But sadly, compare to
=dirvish[-side]=, this package is not built on top of Dired, which means you have
to learn or configure a different set of commands, meanwhile, it is way less
powerful as Dired/Dirvish in terms of file managing.

** treemacs

Same as =neotree=, but =treemacs= is a much more mature yet complex package. It can
even be used as a general rendering backend of any tree-like structures, you may
find this package useful when you have related needs. It might be an overkill
for simple project exploring tasks due to its complexity and huge codebase.

** dired-sidebar

=dired-sidebar=, which is also a file explorer at side window that leveraging the
power of Dired, is a promising alternative to =dirvish-side=.  The problem with
=dired-sidebar= is that all the niceities this package provided are only applied
to the side Dired instance, one needs to do some extra works to make the regular
Dired and =dired-sidebar= look consistent.

** ranger.el

See this [[https://github.com/alexluigit/dirvish/issues/10][discussion]].

** all-the-icons-dired

This package ([[https://github.com/jtbm37/all-the-icons-dired][all-the-icons-dired]]) is *NOT* required at all unless you want to use
Dirvish with ~dirvish-override-dired-mode~ *disabled*.

In fact, I'd advise *against* using this package along with Dirvish. The reason is
that it trys to retrive icons for all the files in a directory /eagerly/, which
hangs up Emacs on large directories. Dirvish, on the contrary, renders UI
elements (including icons of course) *lazily* whenever applicable.

Besides, Dirvish handles line highlighting by its own rather than using the
inbuilt ~hl-line-mode~. Because of this, Dirvish's icon solution integrates
flawlessly with line highlighting along with other attributes.

[[icon-comparison][https://user-images.githubusercontent.com/16313743/159666549-02209e1b-80f9-491d-b7f4-8db1358511e1.png]]

You'll end up with two icon columns if you insist on using this package. Here's a
workaround (you'll still get stuck at large directories though):

#+begin_src emacs-lisp
(defun turn-off-all-the-icons-dired ()
  (all-the-icons-dired-mode -1)
  (setq-local tab-width 2))

(add-hook 'dirvish-mode-hook #'turn-off-all-the-icons-dired)
#+end_src

** treemacs-icons-dired

Apart from similar concerns mentioned in the above =all-the-icons-dired.el=
section, this package ([[https://melpa.org/#/treemacs-icons-dired][treemacs-icons-dired]]) also introduces duplicate icon
columns in Dirvish on =spacemacs=. A workaround can be found [[https://github.com/alexluigit/dirvish/issues/16][here]].

** dired-hacks

TODO

*** dired-ranger

TODO

*** dired-subtree

Comparing with =dired-subtree=, =dirvish-subtree= has several advantages:

- Small code base: only 200+ lines
- Way Faster: expands a directory with 50000+ entries almost instantly
- Consistency: respects ~dired-actual-switches~

*** dired-filter

TODO

*** dired-narrow

TODO

*** dired-collapse

The =collapse= attribute in Dirvish does the same thing, and faster.

** find-dired | fd-dired

It is quite hard to integrate =fd-dired.el= in Dirvish perfectly ([[https://github.com/yqrashawn/fd-dired/pull/21][my PR attempt]]),
so I dropped the support for it and made =dirvish-fd=, which has better
integration with the facilities of Dirvish:

1. File preview works for ~dirvish-fd~ as well.
2. ~dirvish-fd-switches-menu~ (from =dirvish-menu.el=) allows us to change the =fd=
   flags interactively.
3. ~dirvish-quicksort~ and ~dirvish-ls-switches-menu~ also works in the result
   buffer of ~dirvish-fd~.
4. The result buffer of ~dirvish-fd~ is added to Dirvish's local history, which
   means commands like ~dirvish-go-forward/backward-history~ works seamlessly with
   ~dirvish-fd~.

   ...and so on.

If for some reason you are not able to use the =fd= program, no worries, Dirvish
supports the built-in =find-dired.el=.

** dired-git-info | dired-k

The ~vc-state~ and ~git-msg~ attributes in Dirvish can achieve the same
functionality without sacrificing performance. Meanwhile, these packages doesn't
mesh well with =dirvish-subtree= nor =dired-subtree=.
